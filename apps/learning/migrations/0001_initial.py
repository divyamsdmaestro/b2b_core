# Generated by Django 4.2.3 on 2023-11-06 06:03

import apps.common.helpers
import apps.common.model_fields
import apps.common.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("forum", "0001_initial"),
        ("access_control", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("meta", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdvancedLearningPath",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                (
                    "learning_type",
                    models.CharField(
                        choices=[("basic", "Basic"), ("role_based", "Role Based"), ("skill_based", "Skill Based")],
                        max_length=512,
                    ),
                ),
                ("no_of_lp", models.PositiveIntegerField(default=0)),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_advanced_learning_paths",
            },
        ),
        migrations.CreateModel(
            name="AdvancedLearningPathImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("no_of_course", models.PositiveIntegerField(default=0)),
                ("no_of_lp", models.PositiveIntegerField(default=0)),
                ("no_of_alp", models.PositiveIntegerField(default=0)),
                ("no_of_tp", models.PositiveIntegerField(default=0)),
                ("no_of_tpg", models.PositiveIntegerField(default=0)),
                ("no_of_st", models.PositiveIntegerField(default=0)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_categories",
            },
        ),
        migrations.CreateModel(
            name="CategoryImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CategoryRole",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("no_of_course", models.PositiveIntegerField(default=0)),
                ("no_of_lp", models.PositiveIntegerField(default=0)),
                ("no_of_alp", models.PositiveIntegerField(default=0)),
                ("no_of_tp", models.PositiveIntegerField(default=0)),
                ("no_of_tpg", models.PositiveIntegerField(default=0)),
                ("no_of_st", models.PositiveIntegerField(default=0)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("required_qualifications", models.TextField(blank=True, default=None, null=True)),
                ("no_of_sub_role", models.PositiveIntegerField(default=0)),
                ("category", models.ManyToManyField(to="learning.category")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_category_roles",
            },
        ),
        migrations.CreateModel(
            name="CategoryRoleImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CategorySkill",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("no_of_course", models.PositiveIntegerField(default=0)),
                ("no_of_lp", models.PositiveIntegerField(default=0)),
                ("no_of_alp", models.PositiveIntegerField(default=0)),
                ("no_of_tp", models.PositiveIntegerField(default=0)),
                ("no_of_tpg", models.PositiveIntegerField(default=0)),
                ("no_of_st", models.PositiveIntegerField(default=0)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("no_of_sub_skill", models.PositiveIntegerField(default=0)),
                ("category", models.ManyToManyField(to="learning.category")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_category_skills",
            },
        ),
        migrations.CreateModel(
            name="CategorySkillImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("mml_sku_id", models.UUIDField(blank=True, default=None, null=True)),
                ("vm_name", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("total_modules", models.PositiveIntegerField(default=0)),
                ("total_sub_modules", models.PositiveIntegerField(default=0)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.faculty",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_courses",
            },
        ),
        migrations.CreateModel(
            name="CourseImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CourseModule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("position", models.PositiveIntegerField()),
                ("is_draft", models.BooleanField(default=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_module_assessment_dependent", models.BooleanField(default=False)),
                ("is_mandatory", models.BooleanField(default=False)),
                ("is_sub_module_sequence", models.BooleanField(default=False)),
                ("is_ans_visible_pe", models.BooleanField(default=False)),
                ("is_assignment_dependent", models.BooleanField(default=False)),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.course")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_course_modules",
            },
        ),
        migrations.CreateModel(
            name="LearningPath",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                (
                    "learning_type",
                    models.CharField(
                        choices=[("basic", "Basic"), ("role_based", "Role Based"), ("skill_based", "Skill Based")],
                        max_length=512,
                    ),
                ),
                ("no_of_courses", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_learning_paths",
            },
        ),
        migrations.CreateModel(
            name="LearningPathImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playground",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                (
                    "playground_type",
                    models.CharField(
                        choices=[("project", "Project"), ("challenges", "Challenges"), ("assignment", "Assignment")],
                        max_length=512,
                    ),
                ),
                (
                    "guidance_type",
                    models.CharField(choices=[("guided", "Guided"), ("unguided", "Unguided")], max_length=512),
                ),
                (
                    "tool",
                    models.CharField(
                        choices=[("mml", "MML"), ("yaksha", "Yaksha"), ("codelabs", "Codelabs")], max_length=512
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_playgrounds",
            },
        ),
        migrations.CreateModel(
            name="PlaygroundGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("no_of_playgrounds", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_playground_groups",
            },
        ),
        migrations.CreateModel(
            name="PlaygroundGroupImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaygroundImage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SkillTraveller",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                (
                    "learning_type",
                    models.CharField(
                        choices=[
                            ("travel_destinations", "Travel Destinations"),
                            ("travel_landscapes", "Travel Landscapes"),
                            ("travel_journeys", "Travel Journeys"),
                        ],
                        max_length=512,
                    ),
                ),
                (
                    "journey_type",
                    models.CharField(
                        choices=[
                            ("hiking", "Hiking"),
                            ("trekking", "Trekking"),
                            ("weekend_gateway", "Weekend Gateway"),
                            ("business_travel", "Business Travel"),
                            ("event_trip", "Event Trip"),
                        ],
                        max_length=512,
                    ),
                ),
                ("no_of_courses", models.PositiveIntegerField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("skill", models.ManyToManyField(blank=True, to="learning.categoryskill")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_skill_travellers",
            },
        ),
        migrations.CreateModel(
            name="SkillTravellerImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubRoleImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubSkillImageModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubSkill",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("advanced_learning_path", models.ManyToManyField(blank=True, to="learning.advancedlearningpath")),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                ("course", models.ManyToManyField(blank=True, to="learning.course")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.subskillimagemodel",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
                ("learning_path", models.ManyToManyField(blank=True, to="learning.learningpath")),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("skill", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryskill")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_sub_skills",
            },
        ),
        migrations.CreateModel(
            name="SubRole",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("highlight", models.TextField(blank=True, default=None, null=True)),
                ("requirements", models.TextField(blank=True, default=None, null=True)),
                ("prerequisite", models.TextField(blank=True, default=None, null=True)),
                (
                    "proficiency",
                    models.CharField(
                        blank=True,
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default=None,
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "rating",
                    models.FloatField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_rating]
                    ),
                ),
                ("learning_points", models.PositiveSmallIntegerField(default=0)),
                ("credit_score", models.PositiveSmallIntegerField(default=0)),
                ("certificate", models.IntegerField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField(blank=True, default=None, null=True)),
                ("end_date", models.DateField(blank=True, default=None, null=True)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("is_certificate_enabled", models.BooleanField(default=False)),
                ("is_feedback_enabled", models.BooleanField(default=False)),
                ("is_feedback_mandatory", models.BooleanField(default=False)),
                ("is_rating_enabled", models.BooleanField(default=False)),
                ("is_forum_enabled", models.BooleanField(default=False)),
                ("is_assign_expert", models.BooleanField(default=False)),
                ("is_dependencies_sequential", models.BooleanField(default=False)),
                ("is_mandatory_dependencies_complete", models.BooleanField(default=False)),
                ("is_help_section_enabled", models.BooleanField(default=False)),
                ("is_technical_support_enabled", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("advanced_learning_path", models.ManyToManyField(blank=True, to="learning.advancedlearningpath")),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.category",
                    ),
                ),
                ("course", models.ManyToManyField(blank=True, to="learning.course")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("forums", models.ManyToManyField(blank=True, to="forum.forum")),
                ("hashtag", models.ManyToManyField(blank=True, to="meta.hashtag")),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.subroleimagemodel",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="meta.language",
                    ),
                ),
                ("learning_path", models.ManyToManyField(blank=True, to="learning.learningpath")),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("role", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryrole")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_sub_roles",
            },
        ),
        migrations.CreateModel(
            name="SkillTravellerCourse",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("sequence", models.PositiveIntegerField()),
                ("course_unlock_date", models.DateTimeField(blank=True, default=None, null=True)),
                ("is_mandatory", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.course")),
                (
                    "skill_traveller",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.skilltraveller"),
                ),
            ],
            options={
                "default_related_name": "related_skill_traveller_courses",
            },
        ),
        migrations.AddField(
            model_name="skilltraveller",
            name="skill_traveller_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.skilltravellerimagemodel",
            ),
        ),
        migrations.CreateModel(
            name="SkillOntology",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("skill", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryskill")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_skill_ontologies",
            },
        ),
        migrations.CreateModel(
            name="RoleSkillRelation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "required_proficiency",
                    models.CharField(
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        max_length=512,
                    ),
                ),
                ("role", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryrole")),
                ("skill", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryskill")),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_role_skill_relations",
            },
        ),
        migrations.CreateModel(
            name="RoleOntology",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("role", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryrole")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_role_ontologies",
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("file", "File"),
                            ("document", "Document"),
                            ("custom_url", "Custom URL"),
                            ("course_within_catalogue", "Course within catalogue"),
                        ],
                        max_length=512,
                    ),
                ),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("file_url", models.URLField(blank=True, default=None, null=True)),
                ("custom_url", models.URLField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(blank=True, default=None, null=True)),
                ("is_uploaded", models.BooleanField(blank=True, default=None, null=True)),
                ("is_upload_success", models.BooleanField(blank=True, default=None, null=True)),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.course")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_course_resources",
            },
        ),
        migrations.CreateModel(
            name="PlaygroundRelationModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("sequence", models.PositiveIntegerField()),
                ("is_mandatory", models.BooleanField(default=False)),
                (
                    "playground",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.playground"),
                ),
                (
                    "playground_group",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.playgroundgroup"),
                ),
            ],
            options={
                "default_related_name": "related_playground_relations",
            },
        ),
        migrations.AddField(
            model_name="playgroundgroup",
            name="playground_group_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.playgroundgroupimage",
            ),
        ),
        migrations.AddField(
            model_name="playgroundgroup",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="playgroundgroup",
            name="skill",
            field=models.ManyToManyField(blank=True, to="learning.categoryskill"),
        ),
        migrations.AddField(
            model_name="playground",
            name="playground_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.playgroundimage",
            ),
        ),
        migrations.AddField(
            model_name="playground",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="playground",
            name="skill",
            field=models.ManyToManyField(blank=True, to="learning.categoryskill"),
        ),
        migrations.CreateModel(
            name="LearningPathCourse",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("sequence", models.PositiveIntegerField()),
                ("course_unlock_date", models.DateTimeField(blank=True, default=None, null=True)),
                ("is_mandatory", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.course")),
                (
                    "learning_path",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.learningpath"),
                ),
            ],
            options={
                "default_related_name": "related_learning_path_courses",
            },
        ),
        migrations.AddField(
            model_name="learningpath",
            name="learning_path_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.learningpathimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="learningpath",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="modified_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="learningpath",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="learningpath",
            name="skill",
            field=models.ManyToManyField(blank=True, to="learning.categoryskill"),
        ),
        migrations.CreateModel(
            name="CourseSubModule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("duration", models.PositiveIntegerField(default=0)),
                ("position", models.PositiveIntegerField()),
                ("is_draft", models.BooleanField(default=True)),
                ("url", models.URLField(max_length=2083)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("module", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.coursemodule")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_course_sub_modules",
            },
        ),
        migrations.CreateModel(
            name="CourseAssessment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                (
                    "type",
                    models.CharField(
                        choices=[("module_assessment", "Module Assessment"), ("final_assessment", "Final Assessment")],
                        max_length=512,
                    ),
                ),
                ("yaksha_id", models.IntegerField()),
                ("yaksha_uuid", models.UUIDField()),
                ("duration", models.PositiveIntegerField()),
                ("pass_percentage", models.PositiveIntegerField()),
                (
                    "result_type",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "Do not show results to candidate"),
                            (2, "Show detailed section and skill level score metrics to the candidate."),
                            (3, "Show only assessment level score metrics to the candidate."),
                            (4, "Redirect to the custom URL on submission of assessment."),
                        ]
                    ),
                ),
                ("is_shuffling_enabled", models.BooleanField()),
                ("allowed_attempts", models.PositiveIntegerField()),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.course",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="learning.coursemodule",
                    ),
                ),
            ],
            options={
                "default_related_name": "related_course_assessments",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="course_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.courseimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="created_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="deleted_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="forums",
            field=models.ManyToManyField(blank=True, to="forum.forum"),
        ),
        migrations.AddField(
            model_name="course",
            name="hashtag",
            field=models.ManyToManyField(blank=True, to="meta.hashtag"),
        ),
        migrations.AddField(
            model_name="course",
            name="language",
            field=models.ForeignKey(
                blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to="meta.language"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="modified_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="course",
            name="skill",
            field=models.ManyToManyField(blank=True, to="learning.categoryskill"),
        ),
        migrations.AddField(
            model_name="categoryskill",
            name="skill_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="category_skill_image",
                to="learning.categoryskillimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="categoryrole",
            name="role_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.categoryroleimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="category_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.categoryimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="created_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="deleted_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="category",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="modified_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Catalogue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("description", models.TextField(blank=True, default=None, null=True)),
                ("no_of_course", models.PositiveIntegerField(default=0)),
                ("no_of_lp", models.PositiveIntegerField(default=0)),
                ("no_of_alp", models.PositiveIntegerField(default=0)),
                ("no_of_tp", models.PositiveIntegerField(default=0)),
                ("no_of_tpg", models.PositiveIntegerField(default=0)),
                ("no_of_st", models.PositiveIntegerField(default=0)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_archive", models.BooleanField(default=False)),
                ("is_draft", models.BooleanField(default=True)),
                ("code", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("no_of_sub_skill", models.PositiveIntegerField(default=0)),
                ("no_of_sub_role", models.PositiveIntegerField(default=0)),
                ("advanced_learning_path", models.ManyToManyField(blank=True, to="learning.advancedlearningpath")),
                ("course", models.ManyToManyField(blank=True, to="learning.course")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="deleted_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("learning_path", models.ManyToManyField(blank=True, to="learning.learningpath")),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("playground", models.ManyToManyField(blank=True, to="learning.playground")),
                ("playground_group", models.ManyToManyField(blank=True, to="learning.playgroundgroup")),
                ("skill_traveller", models.ManyToManyField(blank=True, to="learning.skilltraveller")),
                ("sub_role", models.ManyToManyField(blank=True, to="learning.subrole")),
                ("sub_skill", models.ManyToManyField(blank=True, to="learning.subskill")),
                ("user_group", models.ManyToManyField(blank=True, to="access_control.usergroup")),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_learning_catalogues",
            },
        ),
        migrations.CreateModel(
            name="ALPLearningPath",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("sequence", models.PositiveIntegerField()),
                ("is_mandatory", models.BooleanField(default=False)),
                (
                    "advanced_learning_path",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.advancedlearningpath"),
                ),
                (
                    "learning_path",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.learningpath"),
                ),
            ],
            options={
                "default_related_name": "related_alp_learning_paths",
            },
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="advanced_learning_path_image",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.advancedlearningpathimagemodel",
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="category",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="learning.category",
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="created_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="deleted_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="deleted_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="forums",
            field=models.ManyToManyField(blank=True, to="forum.forum"),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="hashtag",
            field=models.ManyToManyField(blank=True, to="meta.hashtag"),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="language",
            field=models.ForeignKey(
                blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to="meta.language"
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="modified_by_%(class)s",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="advancedlearningpath",
            name="skill",
            field=models.ManyToManyField(blank=True, to="learning.categoryskill"),
        ),
    ]
