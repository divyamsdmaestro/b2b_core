# Generated by Django 4.2.3 on 2023-12-12 08:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("learning", "0021_courseassessment_is_practice"),
        ("my_learning", "0015_assignmentsubmission_pass_percentage"),
    ]

    operations = [
        migrations.AlterField(
            model_name="assignmenttracker",
            name="allowed_attempt",
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name="assignmenttracker",
            name="available_attempt",
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.CreateModel(
            name="CourseAssessmentTracker",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("allowed_attempt", models.PositiveIntegerField(blank=True, default=None, null=True)),
                ("available_attempt", models.PositiveIntegerField(blank=True, default=None, null=True)),
                (
                    "progress",
                    models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)]),
                ),
                ("completion_date", models.DateTimeField(blank=True, default=None, null=True)),
                ("start_date", models.DateTimeField(blank=True, default=None, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("is_pass", models.BooleanField(blank=True, default=None, null=True)),
                (
                    "course_assessment",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.courseassessment"),
                ),
                (
                    "course_tracker",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="my_learning.usercoursetracker",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="created_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="modified_by_%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module_tracker",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="my_learning.coursemoduletracker",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "default_related_name": "related_course_assessment_trackers",
            },
        ),
        migrations.CreateModel(
            name="CAYakshaSchedule",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("scheduled_id", models.IntegerField()),
                ("scheduled_link", models.URLField()),
                (
                    "tracker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="my_learning.courseassessmenttracker"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_ca_yaksha_schedules",
            },
        ),
        migrations.CreateModel(
            name="CAYakshaResult",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("attempt", models.IntegerField()),
                ("duration", models.IntegerField()),
                ("total_questions", models.IntegerField()),
                ("answered", models.IntegerField()),
                ("progress", models.FloatField()),
                ("start_time", models.DateTimeField(blank=True, default=None, null=True)),
                ("end_time", models.DateTimeField(blank=True, default=None, null=True)),
                ("is_pass", models.BooleanField()),
                (
                    "schedule",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="my_learning.cayakshaschedule"),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_ca_yaksha_results",
            },
        ),
    ]
