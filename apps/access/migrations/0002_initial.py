# Generated by Django 4.2.3 on 2023-11-06 06:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("access_control", "0001_initial"),
        ("meta", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
        ("learning", "0001_initial"),
        ("access", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="userskilldetail",
            name="skill",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="learning.categoryskill"),
        ),
        migrations.AddField(
            model_name="usereducationdetail",
            name="education_type",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="meta.educationtype",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="category",
            field=models.ManyToManyField(blank=True, to="learning.category"),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="current_city",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_address_city",
                to="meta.city",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="current_country",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_address_country",
                to="meta.country",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="current_state",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_address_state",
                to="meta.state",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="education_detail",
            field=models.ManyToManyField(blank=True, to="access.usereducationdetail"),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="identification_type",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="meta.identificationtype",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="permanent_city",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="permanent_address_city",
                to="meta.city",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="permanent_country",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="permanent_address_country",
                to="meta.country",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="permanent_state",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="permanent_address_state",
                to="meta.state",
            ),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="role",
            field=models.ManyToManyField(blank=True, to="learning.categoryrole"),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="skill_detail",
            field=models.ManyToManyField(blank=True, to="access.userskilldetail"),
        ),
        migrations.AddField(
            model_name="userdetail",
            name="user",
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="profile_picture",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="access.userprofilepicture",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="role",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="access_control.userrole",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
