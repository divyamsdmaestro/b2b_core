# Generated by Django 4.2.3 on 2023-11-06 06:03

import apps.common.helpers
import apps.common.model_fields
import apps.common.validators
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="first name")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("middle_name", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("idp_id", models.PositiveIntegerField(blank=True, default=None, null=True)),
                ("data", models.JSONField(default=dict)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDetail",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("user_id_number", models.CharField(blank=True, default=None, max_length=512, null=True, unique=True)),
                ("user_grade", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("manager_name", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("manager_email", models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ("business_unit_name", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("organization_unit_id", models.PositiveIntegerField(blank=True, default=None, null=True)),
                ("manager_id", models.PositiveIntegerField(blank=True, default=None, null=True)),
                ("config_str", models.TextField(blank=True, default=None, null=True)),
                ("birth_date", models.DateField(blank=True, default=None, null=True)),
                (
                    "contact_number",
                    apps.common.model_fields.AppPhoneNumberField(
                        blank=True, default=None, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("prefer_not_to_say", "Prefer Not To Say"),
                            ("male", "Male"),
                            ("female", "Female"),
                            ("others", "Others"),
                        ],
                        default="prefer_not_to_say",
                        max_length=512,
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(
                        choices=[
                            ("prefer_not_to_say", "Prefer Not To Say"),
                            ("married", "Married"),
                            ("unmarried", "Unmarried"),
                        ],
                        default="prefer_not_to_say",
                        max_length=512,
                    ),
                ),
                ("identification_number", models.CharField(blank=True, default=None, max_length=512, null=True)),
                ("current_address", models.TextField(blank=True, default=None, null=True)),
                (
                    "current_pincode",
                    models.PositiveIntegerField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_pincode]
                    ),
                ),
                ("permanent_address", models.TextField(blank=True, default=None, null=True)),
                (
                    "permanent_pincode",
                    models.PositiveIntegerField(
                        blank=True, default=None, null=True, validators=[apps.common.validators.validate_pincode]
                    ),
                ),
                ("is_onsite_user", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_user_details",
            },
        ),
        migrations.CreateModel(
            name="UserEducationDetail",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=512)),
                ("university", models.CharField(max_length=512)),
                ("degree", models.CharField(max_length=512)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_user_education_details",
            },
        ),
        migrations.CreateModel(
            name="UserProfilePicture",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "image",
                    apps.common.model_fields.AppImageField(max_size=5, upload_to=apps.common.helpers.file_upload_path),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSkillDetail",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ("ss_id", models.IntegerField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "proficiency",
                    models.CharField(
                        choices=[("basic", "Basic"), ("intermediate", "Intermediate"), ("advance", "Advance")],
                        default="basic",
                        max_length=512,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
                "default_related_name": "related_user_skill_details",
            },
        ),
    ]
